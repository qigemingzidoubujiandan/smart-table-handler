<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.system.file.mapper.ParseRecourseFileMapper">
    
    <resultMap type="ParseRecourseFile" id="ParseRecourseFileResult">
        <result property="recourseFileId"    column="recourse_file_id"    />
        <result property="resourceId"    column="resource_id"    />
        <result property="fileName"    column="file_name"    />
        <result property="fileType"    column="file_type"    />
        <result property="location"    column="location"    />
        <result property="isParsed"    column="is_parsed"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectParseRecourseFileVo">
        select recourse_file_id, resource_id, file_name, file_type, location, is_parsed, create_by, create_time, update_by, update_time, remark from parse_recourse_file
    </sql>
    <resultMap id="parseRecourseFileResultMap" type="ParseRecourseFileDTO">
        <id column="recourse_file_id" property="recourseFileId" />
        <result column="resource_desc" property="resourceDesc" />
        <result column="resource_id" property="resourceId" />
        <result column="file_name" property="fileName" />
        <result column="file_type" property="fileType" />
        <result column="location" property="location" />
        <result column="is_parsed" property="isParsed" />
        <result column="create_by" property="createBy" />
        <result column="create_time" property="createTime" />
        <result column="update_by" property="updateBy" />
        <result column="update_time" property="updateTime" />
        <result column="remark" property="remark" />
    </resultMap>
    <select id="selectParseRecourseFileList" parameterType="ParseRecourseFileDTO" resultMap="parseRecourseFileResultMap">
        select f.recourse_file_id,
               r.resource_desc,
               f.resource_id,
               f.file_name,
               f.file_type,
               f.location,
               f.is_parsed,
               f.create_by,
               f.create_time,
               f.update_by,
               f.update_time,
               f.remark from parse_recourse_file f inner join parse_recourse r on f.resource_id = r.resource_id

        <where>  
            <if test="fileName != null  and fileName != ''"> and f.file_name like concat('%', #{fileName}, '%')</if>
            <if test="resourceDesc != null  and resourceDesc != ''"> and r.resource_desc like concat('%', #{resourceDesc}, '%')</if>
            <if test="isParsed != null "> and f.is_parsed = #{isParsed}</if>
        </where>
    </select>

    <select id="selectList" parameterType="ParseRecourseFileDTO" resultMap="ParseRecourseFileResult">
        <include refid="selectParseRecourseFileVo"/>
        <where>
            <if test="resourceId != null "> and resource_id = #{resourceId}</if>
            <if test="fileName != null  and fileName != ''"> and file_name like concat('%', #{fileName}, '%')</if>
            <if test="isParsed != null "> and is_parsed = #{isParsed}</if>
        </where>
    </select>
    
    <select id="selectParseRecourseFileByRecourseFileId" parameterType="Long" resultMap="ParseRecourseFileResult">
        <include refid="selectParseRecourseFileVo"/>
        where recourse_file_id = #{recourseFileId}
    </select>

    <insert id="insertParseRecourseFile" parameterType="ParseRecourseFile" useGeneratedKeys="true" keyProperty="recourseFileId">
        insert into parse_recourse_file
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="resourceId != null">resource_id,</if>
            <if test="fileName != null and fileName != ''">file_name,</if>
            <if test="fileType != null and fileType != ''">file_type,</if>
            <if test="location != null and location != ''">location,</if>
            <if test="isParsed != null">is_parsed,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="resourceId != null">#{resourceId},</if>
            <if test="fileName != null and fileName != ''">#{fileName},</if>
            <if test="fileType != null and fileType != ''">#{fileType},</if>
            <if test="location != null and location != ''">#{location},</if>
            <if test="isParsed != null">#{isParsed},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateParseRecourseFile" parameterType="ParseRecourseFile">
        update parse_recourse_file
        <trim prefix="SET" suffixOverrides=",">
            <if test="resourceId != null">resource_id = #{resourceId},</if>
            <if test="fileName != null and fileName != ''">file_name = #{fileName},</if>
            <if test="fileType != null and fileType != ''">file_type = #{fileType},</if>
            <if test="location != null and location != ''">location = #{location},</if>
            <if test="isParsed != null">is_parsed = #{isParsed},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where recourse_file_id = #{recourseFileId}
    </update>

    <delete id="deleteParseRecourseFileByRecourseFileId" parameterType="Long">
        delete from parse_recourse_file where recourse_file_id = #{recourseFileId}
    </delete>

    <delete id="deleteParseRecourseFileByRecourseFileIds" parameterType="String">
        delete from parse_recourse_file where recourse_file_id in 
        <foreach item="recourseFileId" collection="array" open="(" separator="," close=")">
            #{recourseFileId}
        </foreach>
    </delete>

</mapper>