<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.system.resource.mapper.ParseResourceMapper">
    
    <resultMap type="ParseResource" id="ParseResourceResult">
        <result property="resourceId"    column="resource_id"    />
        <result property="resourceDesc"    column="resource_desc"    />
        <result property="isParsed"    column="is_parsed"    />
        <result property="location"    column="location"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectParseResourceVo">
        select resource_id, resource_desc, is_parsed, location, create_by, create_time, update_by, update_time, remark from parse_resource
    </sql>

    <select id="selectParseResourceList" parameterType="ParseResource" resultMap="ParseResourceResult">
        <include refid="selectParseResourceVo"/>
        <where>  
            <if test="resourceDesc != null  and resourceDesc != ''"> and resource_desc like concat('%', #{resourceDesc}, '%')</if>
            <if test="isParsed != null "> and is_parsed = #{isParsed}</if>
        </where>
    </select>
    
    <select id="selectParseResourceByResourceId" parameterType="Long" resultMap="ParseResourceResult">
        <include refid="selectParseResourceVo"/>
        where resource_id = #{resourceId}
    </select>

    <insert id="insertParseResource" parameterType="ParseResource" useGeneratedKeys="true" keyProperty="resourceId">
        insert into parse_resource
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="resourceDesc != null and resourceDesc != ''">resource_desc,</if>
            <if test="isParsed != null">is_parsed,</if>
            <if test="location != null and location != ''">location,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="resourceDesc != null and resourceDesc != ''">#{resourceDesc},</if>
            <if test="isParsed != null">#{isParsed},</if>
            <if test="location != null and location != ''">#{location},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateParseResource" parameterType="ParseResource">
        update parse_resource
        <trim prefix="SET" suffixOverrides=",">
            <if test="resourceDesc != null and resourceDesc != ''">resource_desc = #{resourceDesc},</if>
            <if test="isParsed != null">is_parsed = #{isParsed},</if>
            <if test="location != null and location != ''">location = #{location},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where resource_id = #{resourceId}
    </update>

    <delete id="deleteParseResourceByResourceId" parameterType="Long">
        delete from parse_resource where resource_id = #{resourceId}
    </delete>

    <delete id="deleteParseResourceByResourceIds" parameterType="String">
        delete from parse_resource where resource_id in
        <foreach item="resourceId" collection="array" open="(" separator="," close=")">
            #{resourceId}
        </foreach>
    </delete>

</mapper>